{"version":3,"sources":["components/OneTicketUserHave.jsx","components/AdminContrals.jsx","components/Main.jsx","components/Navbar.jsx","components/WinnerHistory.jsx","components/Banner.jsx","components/Howtoplay.jsx","App.jsx","index.js"],"names":["OneTicketUserHave","props","ticketNo","by","react_default","a","createElement","className","style","fontSize","AdminContrals","lotteryContract","canPlayerBuyTicket","account","_useState","useState","_useState2","Object","slicedToArray","adminMaticBalance","setAdminMaticBalance","_useState3","_useState4","adminAltBalance","setAdminAltBalance","startGame","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","methods","send","from","on","hash","receipt","confirmationNumber","error","stop","apply","this","arguments","maticData","_ref2","_callee2","maticBalance","_context2","knowAdminBalance","sent","altData","_ref3","_callee3","altBalance","_context3","knowAdminBalanceOfToken","buttonClassName","onClick","Main","connected","ConnectAccount","ticketPrice","referralCodeRef","useRef","mainLoading","setMainLoading","isAdmin","_useState5","_useState6","setCanPlayerBuyTicket","_useState7","_useState8","currentGameCount","setCurrentGameCount","_useState9","_useState10","ticketsLeft","setTicketsLeft","_useState11","_useState12","ticketsInDraw","setTicketsInDraw","_useState13","_useState14","playerTickets","setPlayerTickets","useEffect","loadData","connectToAccount","getCanPlayerBuyTicket","getCurrentGameCount","getTotalTickets","getOnlySoldTicketOfGame","getAllTicketsOfUserInGame","call","toNumber","gettotalTicketOfGame","loadDataAuto","setInterval","buyTicket","current","value","buyTicketwithRefferalCode","buyTicketWithoutRefferal","alert","_ref4","_callee4","_context4","console","log","_ref5","_callee5","playerRefferalCode","_context5","buyTicketUsingReferral","backgroundImage","backgroundPosition","backgroundSize","class","role","type","ref","src","alt","height","Math","pow","length","target","map","ticket","key","Navbar","react_router_dom","to","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","concat","substring","WinnerHistory","loadingWinner","setLoadingWinner","lastRefPlayers","setLastRefPlayers","lastConPlayer","setLastConPlayer","lastJakpot","setLastJakpot","loadWinnerHistory","gameCount","_Jakwinners","_conwinners","_Refwinners","getWinnerJakpotPlayerOfGame","getConsulationWinnersOfGame","getRefferalWinnersShorted","TotalTickets","toString","UNIX_timestamp","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","timeConverter","Time","Player1","Player2","Player3","winner","TotalRefferals","User","Banner","Howtoplay","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","gameStartDate","loading","bind","assertThisInitialized","setState","loadWeb3","window","ethereum","web3","Web3","enable","loadBlockChatData","currentProvider","eth","getAccounts","accounts","defaultAccount","net","getId","networkId","Contract","LotteryJson","abi","getOneTicketPrice","oneTicketPrice","switchToPolygonTestNet","request","method","params","chainId","t0","code","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","_context6","Navbar_Navbar","react_router","path","exact","Component","ReactDom","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c5a33f5c.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../css/ticket.css\"\r\n\r\n\r\nexport default function OneTicketUserHave(props) {\r\n    const {ticketNo,by} = props;\r\n    return (\r\n        <div className=\"ticketBg glow-div2\">\r\n            <div className=\"my-auto\">\r\n                <p>Ticket No.</p>\r\n                <h2>{ticketNo}</h2>\r\n                <p style={{fontSize:10}}>{by}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function AdminContrals(props) {\r\n    const { lotteryContract, canPlayerBuyTicket, account } = props;\r\n\r\n    const [adminMaticBalance, setAdminMaticBalance] = useState(null);\r\n    const [adminAltBalance, setAdminAltBalance] = useState(null);\r\n\r\n    const startGame = async () => {\r\n        await lotteryContract.methods.startGame()\r\n            .send({ from: account })\r\n            .on('transactionHash', function (hash) {\r\n\r\n            })\r\n            .on('receipt', function (receipt) {\r\n\r\n            })\r\n            .on('confirmation', (confirmationNumber, receipt) => {\r\n            })\r\n            .on('error', function (error, receipt) {\r\n\r\n            });\r\n    }\r\n\r\n    const maticData = async () => {\r\n        const maticBalance = await lotteryContract.methods.knowAdminBalance()\r\n            .send({ from: account })\r\n            .on('transactionHash', function (hash) {\r\n\r\n            })\r\n            .on('receipt', function (receipt) {\r\n\r\n            })\r\n            .on('confirmation', (confirmationNumber, receipt) => {\r\n                setAdminMaticBalance(maticBalance)\r\n            })\r\n            .on('error', function (error, receipt) {\r\n\r\n            });\r\n    }\r\n\r\n    const altData = async () => {\r\n            const altBalance = await lotteryContract.methods.knowAdminBalanceOfToken()\r\n            .send({ from: account })\r\n            .on('transactionHash', function (hash) {\r\n\r\n            })\r\n            .on('receipt', function (receipt) {\r\n\r\n            })\r\n            .on('confirmation', (confirmationNumber, receipt) => {\r\n                setAdminAltBalance(altBalance)\r\n            })\r\n            .on('error', function (error, receipt) {\r\n\r\n            });\r\n\r\n    }\r\n\r\n    const buttonClassName = \"btn btn-glow custom-Big-Button-admin px-3 py-2 text-light\";\r\n    const buttonColClassName = \"col-xl-2 col-md-3 col-4\";\r\n    return (\r\n        <div>\r\n            <h2>Welcome Admin</h2>\r\n            <div className=\"d-flex\">\r\n                <p>Currently status: </p>\r\n                {canPlayerBuyTicket\r\n                    ?\r\n                    <p>User can buy ticket</p>\r\n                    :\r\n                    <p>User can't buy ticket</p>\r\n                }\r\n            </div>\r\n            {adminMaticBalance &&\r\n                <div className=\"d-flex\">\r\n                    <p>Matic Balance: {adminMaticBalance}</p>\r\n                </div>\r\n            }\r\n            {adminAltBalance &&\r\n                <div className=\"d-flex\">\r\n                    <p>Alt Balance: {adminAltBalance}</p>\r\n                </div>\r\n            }\r\n            <div className=\"row mt-4\">\r\n                <div className={buttonColClassName}>\r\n                    <button onClick={startGame} className={buttonClassName}>Start Game</button>\r\n                </div>\r\n                <div className={buttonColClassName}>\r\n                    <button onClick={maticData} className={buttonClassName}>Know Admin Matic Balance</button>\r\n                </div>\r\n\r\n                <div className={buttonColClassName}>\r\n                    <button onClick={altData} className={buttonClassName}>Know Admin Alt Balance</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport OneTicketUserHave from './OneTicketUserHave';\r\n\r\nimport \"../css/CustomButtons.css\"\r\nimport \"../css/MainBackground.css\"\r\nimport AdminContrals from './AdminContrals';\r\nimport { useParams } from 'react-router';\r\n\r\nexport default function Main(props) {\r\n    const { account, lotteryContract, connected, ConnectAccount, ticketPrice } = props;\r\n    const referralCodeRef = useRef(null);\r\n\r\n    const [mainLoading, setMainLoading] = useState(true);\r\n    const [isAdmin, setisAdmin] = useState(false);\r\n    const [canPlayerBuyTicket, setCanPlayerBuyTicket] = useState(false);\r\n    const [currentGameCount, setCurrentGameCount] = useState(null);\r\n    const [ticketsLeft, setTicketsLeft] = useState(null);\r\n    const [ticketsInDraw, setTicketsInDraw] = useState(null);\r\n    const [playerTickets, setPlayerTickets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (connected) {\r\n            loadData();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (connected) {\r\n            loadData();\r\n        }\r\n    }, [lotteryContract]);\r\n\r\n\r\n    const connectToAccount = () => {\r\n        if (!connected) {\r\n            setMainLoading(true);\r\n            ConnectAccount()\r\n        }\r\n    }\r\n\r\n    const loadData = async () => {\r\n        setMainLoading(true);\r\n        const getCanPlayerBuyTicket = await lotteryContract.methods.getCanPlayerBuyTicket().call();\r\n        setCanPlayerBuyTicket(getCanPlayerBuyTicket);\r\n\r\n        // const isAdmin = await lotteryContract.methods.isAdmin().call();\r\n        // setisAdmin(isAdmin);\r\n\r\n        const getCurrentGameCount = await lotteryContract.methods.getCurrentGameCount().call();\r\n        setCurrentGameCount(getCurrentGameCount.toNumber());\r\n\r\n        const getTotalTickets = await lotteryContract.methods.getTotalTickets().call();\r\n        const getOnlySoldTicketOfGame = await lotteryContract.methods.gettotalTicketOfGame(getCurrentGameCount.toNumber()).call();\r\n        setTicketsLeft(getTotalTickets.toNumber() - getOnlySoldTicketOfGame.toNumber());\r\n\r\n        setTicketsInDraw(getOnlySoldTicketOfGame.toNumber());\r\n\r\n        const getAllTicketsOfUserInGame = await lotteryContract.methods.getAllTicketsOfUserInGame(account, getCurrentGameCount.toNumber()).call();\r\n        setPlayerTickets(getAllTicketsOfUserInGame);\r\n\r\n\r\n        setMainLoading(false);\r\n\r\n    }\r\n\r\n    const loadDataAuto = async () => {\r\n        const getCanPlayerBuyTicket = await lotteryContract.methods.getCanPlayerBuyTicket().call();\r\n        setCanPlayerBuyTicket(getCanPlayerBuyTicket);\r\n\r\n        // const isAdmin = await lotteryContract.methods.isAdmin().call();\r\n        // setisAdmin(isAdmin);\r\n\r\n        const getCurrentGameCount = await lotteryContract.methods.getCurrentGameCount().call();\r\n        setCurrentGameCount(getCurrentGameCount.toNumber());\r\n\r\n        const getTotalTickets = await lotteryContract.methods.getTotalTickets().call();\r\n        const getOnlySoldTicketOfGame = await lotteryContract.methods.gettotalTicketOfGame(getCurrentGameCount.toNumber()).call();\r\n        setTicketsLeft(getTotalTickets.toNumber() - getOnlySoldTicketOfGame.toNumber());\r\n\r\n        setTicketsInDraw(getOnlySoldTicketOfGame.toNumber());\r\n\r\n        const getAllTicketsOfUserInGame = await lotteryContract.methods.getAllTicketsOfUserInGame(account, getCurrentGameCount.toNumber()).call();\r\n        setPlayerTickets(getAllTicketsOfUserInGame);\r\n\r\n    }\r\n    setInterval(() => {\r\n        if (lotteryContract) {\r\n\r\n            loadDataAuto();\r\n        }\r\n    }, 5000);\r\n\r\n    const buyTicket = async () => {\r\n        if (connected && lotteryContract != null) {\r\n            setMainLoading(true);\r\n            const getCanPlayerBuyTicket = await lotteryContract.methods.getCanPlayerBuyTicket().call();\r\n            if (getCanPlayerBuyTicket) {\r\n\r\n                let playerRefferalCode = referralCodeRef.current.value;\r\n                if (playerRefferalCode != '') {\r\n                    buyTicketwithRefferalCode();\r\n                } else {\r\n                    buyTicketWithoutRefferal()\r\n                }\r\n            } else {\r\n                alert('game not started yet')\r\n            }\r\n        } else {\r\n            setMainLoading(false);\r\n            connectToAccount();\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const buyTicketWithoutRefferal = async () => {\r\n        await lotteryContract.methods.buyTicket()\r\n            .send({ from: account, value: ticketPrice })\r\n            .on('confirmation', (confirmationNumber, receipt) => {\r\n                loadData();\r\n            })\r\n            .on('error', function (error, receipt) {\r\n                console.log(error)\r\n                loadData();\r\n            });\r\n    }\r\n\r\n    const buyTicketwithRefferalCode = async () => {\r\n        let playerRefferalCode = referralCodeRef.current.value;\r\n        await lotteryContract.methods.buyTicketUsingReferral(playerRefferalCode)\r\n            .send({ from: account, value: ticketPrice })\r\n            .on('confirmation', (confirmationNumber, receipt) => {\r\n                loadData();\r\n            })\r\n            .on('error', function (error, receipt) {\r\n                loadData();\r\n            });\r\n    }\r\n\r\n    const ticketColStyle = \"col-xl-2 col-md-3 col-6 mb-2\"\r\n    return (\r\n        <div className=\"main-box mx-auto mt-2 p-4 text-light text-center\">\r\n            <div className=\"bg-holder\" style={{ backgroundImage: 'url(img/bg/heroheader-bg.png)', backgroundPosition: 'center', backgroundSize: 'contain' }}></div>\r\n\r\n            {connected &&\r\n                !canPlayerBuyTicket &&\r\n                <div className=\"d-flex \">\r\n                    <div class=\"ml-auto spinner-border text-light my-1\" role=\"status\">\r\n                    </div>\r\n                    <h3 className=\"mr-auto\">Please Wait. Previous round winners are  declaring</h3>\r\n                </div>\r\n            }\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 text-center\">\r\n                    <div onClick={connectToAccount} className=\"glassBg-box mx-6 py-3 glow-div2\">\r\n                        <h2>Tickets Left</h2>\r\n                        <div className=\"text-bg-glass mt-1\">\r\n                            {connected\r\n                                ?\r\n                                mainLoading\r\n                                    ?\r\n                                    <div class=\"spinner-border text-light my-1\" role=\"status\">\r\n                                    </div>\r\n                                    :\r\n                                    <h1 className=\"letter-spaceing\">{ticketsLeft}</h1>\r\n                                :\r\n                                <h1 className=\"fade-text-color\">Connect</h1>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 text-center \">\r\n                    <div onClick={connectToAccount} className=\"glassBg-box mx-6 py-3 glow-div2 mt-md-0 mt-2\">\r\n                        <h2>Tickets in Draw</h2>\r\n                        <div className=\"text-bg-glass mt-1\">\r\n                            {connected\r\n                                ?\r\n                                mainLoading\r\n                                    ?\r\n                                    <div class=\"spinner-border text-light my-1\" role=\"status\">\r\n                                    </div>\r\n                                    :\r\n                                    <h1 className=\"letter-spaceing\">{ticketsInDraw}</h1>\r\n                                :\r\n                                <h1 className=\"fade-text-color\">Connect</h1>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <p>{currentGameCount}</p>\r\n\r\n            <div className=\"\">\r\n                <p>Add Referral Code</p>\r\n                <input type=\"text\" ref={referralCodeRef} />\r\n            </div>\r\n\r\n            <button onClick={buyTicket} className=\"btn btn-glow custom-Big-Button text-light mt-5\">\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <img className=\"img-fluid\" src=\"img/maticlogo.png\" alt=\"\" style={{ height: 100 }} />\r\n                    <div className=\"\">\r\n                        <h2>Buy Ticket Now</h2>\r\n                        <h6>For {ticketPrice / 10 ** 18} Matic</h6>\r\n                    </div>\r\n\r\n                </div>\r\n            </button>\r\n\r\n            {\r\n                !connected &&\r\n                <p>Please Connect to your Wallet for play game</p>\r\n            }\r\n\r\n            {connected &&\r\n                playerTickets.length >= 1 &&\r\n                <div className=\"mt-4\">\r\n                    <p>Now you can refer you friend and get free ticket</p>\r\n                    <p>Your Refferal Code: <a className=\"text-warning\" target=\"_blank\" >{account}</a></p>\r\n                </div>\r\n\r\n            }\r\n            <div className=\"text-left mt-4\">\r\n                <h5>Your tickets in this game({playerTickets.length}):</h5>\r\n                <div className=\"row  align-items-start justify-content-start \">\r\n                    {playerTickets && playerTickets.map((ticket, key) => {\r\n                        return (\r\n                            <div className={ticketColStyle} key={key}>\r\n                                <OneTicketUserHave ticketNo={ticket.toNumber()} by={\"buy\"} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            {\r\n                isAdmin &&\r\n                <AdminContrals lotteryContract={lotteryContract} account={account} canPlayerBuyTicket={canPlayerBuyTicket} />\r\n            }\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"../css/Navbar.css\"\r\nexport default function Navbar(props) {\r\n\r\n    const { ConnectAccount, account } = props;\r\n\r\n    return (\r\n        <nav className='navbar  navbar-expand-xl navbar-dark glassNav'>\r\n            <div className=\"container-fluid px-md-5\">\r\n                <Link className=\"navbar-brand mx-xl-0 mx-auto \" to=\"/\">\r\n                    {/* <img className=\"ml-xl-0 ml-5 img-fluid\" src=\"img/logo2.png\" alt=\"\" /> */}\r\n                    <h3>Lottery</h3>\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"fontPara navbar-nav me-auto ms-auto mb-2 mb-lg-0 \">\r\n                        \r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/how-to-play\">\r\n                                <h4 className=\"nav-link\">How to play</h4>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/winner-history\">\r\n                                <h4 className=\"nav-link\">Winner History</h4>\r\n                            </Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <button onClick={ConnectAccount} className=\"btn btn-dark btn-lg\">{account ? `${account.substring(0, 3)}...${account.substring(account.length - 4, account.length)} ` : 'Connect'}</button>\r\n                </div>\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport \"../css/CustomTable.css\"\r\n\r\nexport default function WinnerHistory(props) {\r\n    const { lotteryContract, connected } = props;\r\n\r\n    const [last30Winners, setLast30Winners] = useState([]);\r\n    const [loadingWinner, setLoadingWinner] = useState(true);\r\n\r\n    const [lastRefPlayers, setLastRefPlayers] = useState(null);\r\n    const [lastConPlayer, setLastConPlayer] = useState(null);\r\n    const [lastJakpot, setLastJakpot] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (connected) {\r\n            loadWinnerHistory();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (connected) {\r\n            loadWinnerHistory();\r\n        }\r\n    }, [lotteryContract]);\r\n\r\n    function timeConverter(UNIX_timestamp) {\r\n        var a = new Date(UNIX_timestamp * 1000);\r\n        var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        var year = a.getFullYear();\r\n        var month = months[a.getMonth()];\r\n        var date = a.getDate();\r\n        var hour = a.getHours();\r\n        var min = a.getMinutes();\r\n        var sec = a.getSeconds();\r\n        var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\r\n        return time;\r\n    }\r\n\r\n\r\n    const loadWinnerHistory = async () => {\r\n        const getCurrentGameCount = await lotteryContract.methods.getCurrentGameCount().call();\r\n\r\n        let gameCount = getCurrentGameCount.toNumber() - 1;\r\n\r\n        console.log(\"loading winners......\");\r\n\r\n        const _Jakwinners = await lotteryContract.methods.getWinnerJakpotPlayerOfGame(gameCount).call();\r\n        console.log(\"_Jakwinners\", _Jakwinners);\r\n        setLastJakpot(_Jakwinners);\r\n        const _conwinners = await lotteryContract.methods.getConsulationWinnersOfGame(gameCount).call();\r\n        console.log(\"_conwinners\", _conwinners);\r\n        setLastConPlayer(_conwinners);\r\n        const _Refwinners = await lotteryContract.methods.getRefferalWinnersShorted(gameCount).call();\r\n        console.log(\"_Refwinners\", _Refwinners);\r\n        setLastRefPlayers(_Refwinners);\r\n\r\n\r\n        setLoadingWinner(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"table-box mx-auto mt-2 p-4 text-light text-center\">\r\n            <h1>Winner history</h1>\r\n            <p>last Game</p>\r\n            <div className=\"table-bg py-4\">\r\n                <table class=\"table  text-light \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>players</th>\r\n                            <th>time</th>\r\n                            <th>player1</th>\r\n                            <th>player2</th>\r\n                            <th>player3</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lastJakpot &&\r\n                            <tr>\r\n                                <td>{lastJakpot.TotalTickets.toString()}</td>\r\n                                <td>{timeConverter(lastJakpot.Time.toString())}</td>\r\n                                <td>{lastJakpot.Player1}</td>\r\n                                <td>{lastJakpot.Player2}</td>\r\n                                <td>{lastJakpot.Player3}</td>\r\n                            </tr>\r\n\r\n                        }\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n                <h1>Consulation Winners</h1>\r\n                <table class=\"table  text-light \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>players</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lastConPlayer && lastConPlayer.map((winner, key) => {\r\n\r\n                            return (\r\n                                <tr>\r\n                                    <td>{winner}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n\r\n                        }\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n                <h1>Refferal Rewards</h1>\r\n                <table class=\"table  text-light \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>total Ref</th>\r\n                            <th>player</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lastRefPlayers && lastRefPlayers.map((winner, key) => {\r\n\r\n                            return (\r\n                                <tr>\r\n                                    <td>{winner.TotalRefferals.toString()}</td>\r\n                                    <td>{winner.User}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n\r\n                        }\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n                {loadingWinner &&\r\n                    <div className=\"text-center\">\r\n                        <div class=\"spinner-border text-light my-1\" role=\"status\">\r\n                        </div>\r\n\r\n                    </div>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function Banner(props) {\r\n    \r\n    return (\r\n        <div className=\"banner-img-bg mx-md-5 text-light  py-4 \">\r\n            {/* <img className=\" img-fluid banner-img\" src=\"img/banner/1.jpg\" alt=\"\" /> */}\r\n            <div className=\"d-md-flex align-items-center justify-content-between text-center\">\r\n                    <div className=\"glow-div2 glassBg-box-timer text-center\">\r\n                        <h2 className=\"my-4\">Play Game And Earn</h2>\r\n                    </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Howtoplay() {\r\n    return (\r\n        <div className=\"text-light glassBg-box p-5 m-5\">\r\n            <h1>How To Play</h1>\r\n            <p>\r\n            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Natus ipsum impedit sunt alias perspiciatis sequi amet fuga officiis iste ratione quidem repellendus provident voluptas voluptatum illo mollitia eligendi placeat, quos ab error. Dolorum, fuga deleniti assumenda quidem neque veniam, aspernatur tempore maiores dolores quis laudantium aliquid magni! Expedita iure eos, illum eius error ratione laudantium pariatur natus suscipit a esse ut fugiat, quo at tenetur doloremque ullam veniam adipisci reiciendis, soluta neque rem. Expedita ipsa amet cupiditate deleniti aut laborum doloribus laboriosam eaque numquam ab, eius blanditiis quo tempore voluptatem cum iste earum sunt ea repellendus vitae veniam quos corporis! Eius, nemo. Maiores aspernatur unde sit tempore necessitatibus itaque accusantium perferendis at ut, aliquam nostrum illo adipisci, voluptatum saepe illum animi laboriosam vel? Vel exercitationem, fugiat dolor fugit doloribus harum modi ullam itaque. Labore animi maiores officia molestiae possimus. Ullam alias soluta aut nam at nihil eveniet assumenda doloribus voluptate aliquid. Praesentium quas nobis magnam placeat.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from \"react-router-dom\";\r\n\r\nimport Web3 from \"web3\";\r\nimport LotteryJson from \"./abis/LotteryContract.json\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\n\r\nimport Main from \"./components/Main\";\r\n\r\nimport \"./css/main.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport WinnerHistory from \"./components/WinnerHistory\";\r\nimport Banner from \"./components/Banner\";\r\nimport Howtoplay from \"./components/Howtoplay\";\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  async ConnectAccount() {\r\n    await this.loadWeb3();\r\n  };\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      this.loadBlockChatData();\r\n\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n      this.loadBlockChatData();\r\n\r\n    } else {\r\n      window.alert(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async loadBlockChatData() {\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    web3.eth.defaultAccount = accounts[0];\r\n    this.setState({ account: accounts[0] });\r\n\r\n    const networkId = await web3.eth.net.getId();\r\n    // const networkData = LotteryJson.networks[networkId];\r\n    \r\n    // if (networkData) {\r\n      if (networkId === 80001 || networkId === 137) {\r\n      this.setState({ connected: true });\r\n      const networkAddress = '0x2890eE71CdcA05539A72f6cabEDD2D9a26185a11';\r\n      const lotteryContract = await web3.eth.Contract(LotteryJson.abi, networkAddress);\r\n      this.setState({ lotteryContract });\r\n\r\n      const oneTicketPrice = await lotteryContract.methods.getOneTicketPrice().call();\r\n      this.setState({ ticketPrice: oneTicketPrice.toString() });\r\n\r\n      this.setState({ loading: false });\r\n    } else {\r\n      window.alert(\"Blockchat contract not deployed to detected network.\");\r\n      this.switchToPolygonTestNet()\r\n    }\r\n  }\r\n\r\n  \r\n    async switchToPolygonTestNet(){\r\n    try {\r\n      await window.ethereum.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: \"0x13881\" }],\r\n      });\r\n      this.loadBlockChatData();\r\n    } catch (error) {\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: \"wallet_addEthereumChain\",\r\n            params: [\r\n              {\r\n                chainId: \"0x13881\",\r\n                chainName: \"Polygon TestNet Mumbai\",\r\n                rpcUrls: [\"https://rpc-mumbai.maticvigil.com/\"],\r\n                nativeCurrency: {\r\n                  name: \"Matic\",\r\n                  symbol: \"Matic\",\r\n                  decimals: 18,\r\n                },\r\n                blockExplorerUrls: [\"https://explorer-mumbai.maticvigil.com\"],\r\n              },\r\n            ],\r\n          });\r\n          this.loadBlockChatData();\r\n\r\n        } catch (error) {\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n   async switchToPolygonMainnet() {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: \"0x89\" }],\r\n      });\r\n      this.loadBlockChatData();\r\n    } catch (error) {\r\n      if (error.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: \"wallet_addEthereumChain\",\r\n            params: [\r\n              {\r\n                chainId: \"0x89\",\r\n                chainName: \"Polygon Mainnet\",\r\n                rpcUrls: [\"https://rpc-mainnet.maticvigil.com/\"],\r\n                nativeCurrency: {\r\n                  name: \"Matic\",\r\n                  symbol: \"Matic\",\r\n                  decimals: 18,\r\n                },\r\n                blockExplorerUrls: [\"https://explorer.matic.network/\"],\r\n              },\r\n            ],\r\n          });\r\n          this.loadBlockChatData();\r\n\r\n        } catch (error) {\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connected: false,\r\n      account: \"\",\r\n      gameStartDate: 0,\r\n      lotteryContract: null,\r\n      ticketPrice: 10**18,\r\n      loading: true,\r\n    };\r\n\r\n    this.ConnectAccount = this.ConnectAccount.bind(this)\r\n  }\r\n\r\n  render() {\r\n    return (!this.state.loading\r\n      ?\r\n      <HashRouter>\r\n        <Navbar account={this.state.account} ConnectAccount={this.ConnectAccount} />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Banner gameStartDate={this.state.gameStartDate} />\r\n            <Main account={this.state.account} ticketPrice={this.state.ticketPrice} connected={this.state.connected} ConnectAccount={this.ConnectAccount} lotteryContract={this.state.lotteryContract} />\r\n          </Route >\r\n          <Route path=\"/referral/:referCode\" exact>\r\n            <Banner gameStartDate={this.state.gameStartDate} />\r\n            <Main ticketPrice={this.state.ticketPrice} account={this.state.account} connected={this.state.connected} ConnectAccount={this.ConnectAccount} lotteryContract={this.state.lotteryContract} />\r\n          </Route >\r\n          <Route path=\"/winner-history\" exact>\r\n            <WinnerHistory lotteryContract={this.state.lotteryContract} connected={this.state.connected} />\r\n          </Route >\r\n\r\n          <Route path=\"/how-to-play\" exact>\r\n            <Howtoplay />\r\n          </Route >\r\n\r\n        </Switch >\r\n      </HashRouter >\r\n      :\r\n      <div className=\"text-center\">\r\n        loading...\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDom.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}